# Generated by Django 5.1.5 on 2025-02-10 17:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CostcoItem',
            fields=[
                ('item_code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('current_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('last_price_update', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['item_code'],
            },
        ),
        migrations.CreateModel(
            name='CostcoWarehouse',
            fields=[
                ('store_number', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['store_number'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_number', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Transaction number must be numeric', regex='^\\d+$')])),
                ('file', models.FileField(upload_to='receipts/')),
                ('store_location', models.CharField(blank=True, max_length=255)),
                ('store_number', models.CharField(blank=True, max_length=50)),
                ('store_city', models.CharField(blank=True, max_length=100)),
                ('transaction_date', models.DateTimeField(blank=True, null=True)),
                ('subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ebt_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('instant_savings', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parsed_successfully', models.BooleanField(default=False)),
                ('parse_error', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField(default=1)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_taxable', models.BooleanField(default=False)),
                ('instant_savings', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='receipt_parser.receipt')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ItemPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('new_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_changed', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='receipt_parser.costcoitem')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='receipt_parser.costcowarehouse')),
            ],
            options={
                'ordering': ['-date_changed'],
                'indexes': [models.Index(fields=['item', 'date_changed'], name='receipt_par_item_id_b922dc_idx'), models.Index(fields=['warehouse', 'date_changed'], name='receipt_par_warehou_ae2e7d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ItemWarehousePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('last_seen', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_prices', to='receipt_parser.costcoitem')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='receipt_parser.costcowarehouse')),
            ],
            options={
                'indexes': [models.Index(fields=['item', 'price'], name='receipt_par_item_id_bdcdb2_idx'), models.Index(fields=['warehouse', 'last_seen'], name='receipt_par_warehou_4f6ba4_idx')],
                'unique_together': {('item', 'warehouse')},
            },
        ),
        migrations.CreateModel(
            name='PriceAdjustmentAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=50)),
                ('item_description', models.CharField(max_length=255)),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lower_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_store_city', models.CharField(max_length=100)),
                ('original_store_number', models.CharField(max_length=50)),
                ('cheaper_store_city', models.CharField(max_length=100)),
                ('cheaper_store_number', models.CharField(max_length=50)),
                ('purchase_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'item_code'], name='receipt_par_user_id_fd5571_idx'), models.Index(fields=['purchase_date'], name='receipt_par_purchas_44e83b_idx'), models.Index(fields=['is_active'], name='receipt_par_is_acti_8a772f_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='receipt',
            constraint=models.UniqueConstraint(fields=('user', 'transaction_number'), name='unique_user_transaction'),
        ),
        migrations.AlterUniqueTogether(
            name='receipt',
            unique_together={('user', 'transaction_number')},
        ),
    ]
