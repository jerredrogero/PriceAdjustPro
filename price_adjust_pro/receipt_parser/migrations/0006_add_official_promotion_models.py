# Generated by Django 5.1 on 2025-05-24 16:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('receipt_parser', '0005_add_data_source_to_price_adjustment_alert'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='priceadjustmentalert',
            name='data_source',
            field=models.CharField(choices=[('ocr_parsed', 'OCR Parsed'), ('user_edit', 'User Edit'), ('official_promo', 'Official Promotion')], default='ocr_parsed', help_text='Source of the price data that triggered this alert', max_length=20),
        ),
        migrations.CreateModel(
            name='CostcoPromotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="e.g., 'January 2024 Member Deals'", max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('sale_start_date', models.DateField(help_text='When the sale period begins')),
                ('sale_end_date', models.DateField(help_text='When the sale period ends')),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_promotions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Costco Promotion',
                'verbose_name_plural': 'Costco Promotions',
                'ordering': ['-sale_start_date'],
            },
        ),
        migrations.CreateModel(
            name='OfficialSaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(db_index=True, max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('instant_rebate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sale_type', models.CharField(choices=[('instant_rebate', 'Instant Rebate'), ('markdown', 'Markdown Sale'), ('member_only', 'Member Only Deal'), ('manufacturer', 'Manufacturer Coupon')], default='instant_rebate', max_length=20)),
                ('alerts_created', models.IntegerField(default=0, help_text='Number of price adjustment alerts created')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_items', to='receipt_parser.costcopromotion')),
            ],
            options={
                'verbose_name': 'Official Sale Item',
                'verbose_name_plural': 'Official Sale Items',
                'ordering': ['promotion', 'item_code'],
            },
        ),
        migrations.AddField(
            model_name='priceadjustmentalert',
            name='official_sale_item',
            field=models.ForeignKey(blank=True, help_text='Official sale item that generated this alert', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='generated_alerts', to='receipt_parser.officialsaleitem'),
        ),
        migrations.CreateModel(
            name='CostcoPromotionPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='promo_booklets/%Y/%m/')),
                ('page_number', models.IntegerField(default=1)),
                ('extracted_text', models.TextField(blank=True, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='receipt_parser.costcopromotion')),
            ],
            options={
                'verbose_name': 'Promotion Page',
                'verbose_name_plural': 'Promotion Pages',
                'ordering': ['promotion', 'page_number'],
                'unique_together': {('promotion', 'page_number')},
            },
        ),
        migrations.AddIndex(
            model_name='officialsaleitem',
            index=models.Index(fields=['item_code', 'sale_price'], name='receipt_par_item_co_bc7ce8_idx'),
        ),
        migrations.AddIndex(
            model_name='officialsaleitem',
            index=models.Index(fields=['promotion', 'sale_type'], name='receipt_par_promoti_bcf3fc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='officialsaleitem',
            unique_together={('promotion', 'item_code')},
        ),
    ]
